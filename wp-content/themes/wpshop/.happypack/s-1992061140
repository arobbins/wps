'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.initDocs = undefined;

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _ws = require('../ws/ws');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*

On click

*/
function onDocClick($) {

  // window.paceOptions = {
  //   ajax: {
  //    trackMethods: ["GET", "POST"]
  //  }
  // }
  Pace.restart();

  $('.doc-term').on('click', function (e) {

    var $doc = $(this);

    Pace.restart();
    Pace.track((0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee() {
      var data, url;
      return _regenerator2.default.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return (0, _ws.getDoc)($doc.data('doc-id'));

            case 2:
              data = _context.sent;


              data = JSON.parse(data);

              showDocContent(data.content);

              url = "/docs/" + data.slug;


              window.history.pushState("object or string", "Title", url);

              jQuery('html, body').animate({
                scrollTop: jQuery('.main').offset().top - 150
              }, 200);

              DISQUS.reset({
                reload: true,
                config: function config() {
                  this.page.identifier = $doc.data('doc-id').toString();
                  this.page.url = "http://wpshop.dev/#!newthread";
                }
              });

            case 9:
            case 'end':
              return _context.stop();
          }
        }
      }, _callee, this);
    })));
  });
}

/*

Show Doc Content

*/
function showDocContent(docContent) {

  jQuery('.main').empty().append(jQuery('<div class="entry-content">' + docContent + '</div>'));
  jQuery('.entry-content').after(jQuery('<div id="disqus_thread"></div>'));

  Prism.highlightAll(true, function () {});
}

/*

Init Docs

*/
function initDocs($) {
  onDocClick($);
}

exports.initDocs = initDocs;